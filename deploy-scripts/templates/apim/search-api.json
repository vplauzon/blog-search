{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "apimName": {
            "type": "string",
            "minLength": 2,
            "metadata": {
                "description": "API-M's Name"
            }
        },
        "searchServiceName": {
            "metadata": {
                "description": "Name of the search service"
            },
            "type": "string"
        },
        "searchKey": {
            "type": "string",
            "minLength": 2,
            "metadata": {
                "description": "Search Query Key"
            }
        }
    },
    "variables": {
        "Search Service Property": "api-search-service-name",
        "Query Key Property": "api-search-query-key",
        "Product": "search-product",
        "Api": "search-api",
        "Web Subscription": "search-web"
    },
    "resources": [
        {
            "type": "Microsoft.ApiManagement/service/properties",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/', variables('Search Service Property'))]",
            "dependsOn": [
            ],
            "properties": {
                "displayName": "[variables('Search Service Property')]",
                "value": "[parameters('searchServiceName')]",
                "secret": true
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/properties",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/', variables('Query Key Property'))]",
            "dependsOn": [
            ],
            "properties": {
                "displayName": "[variables('Query Key Property')]",
                "value": "[parameters('searchKey')]",
                "secret": true
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/', variables('Api'))]",
            "dependsOn": [
            ],
            "properties": {
                "displayName": "[variables('Api')]",
                "apiRevision": "1",
                "path": "[variables('Api')]",
                "protocols": [
                    "https"
                ],
                "isCurrent": true
            },
            "resources": [
                {
                    "type": "policies",
                    "apiVersion": "2019-01-01",
                    "name": "policy",
                    "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), variables('Api'))]"
                    ],
                    "properties": {
                        "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <cors allow-credentials=\"true\">\r\n      <allowed-origins>\r\n        <origin>https://vplauzon.github.io/</origin>\r\n      </allowed-origins>\r\n      <allowed-methods preflight-result-max-age=\"300\">\r\n        <method>GET</method>\r\n        <method>OPTIONS</method>\r\n      </allowed-methods>\r\n      <allowed-headers>\r\n        <header>*</header>\r\n      </allowed-headers>\r\n      <expose-headers>\r\n        <header>*</header>\r\n      </expose-headers>\r\n    </cors>\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
                        "format": "xml"
                    }
                },
                {
                    "type": "operations",
                    "apiVersion": "2019-01-01",
                    "name": "get",
                    "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'search')]"
                    ],
                    "properties": {
                        "displayName": "get",
                        "method": "GET",
                        "urlTemplate": "/",
                        "templateParameters": [
                        ],
                        "request": {
                            "queryParameters": [
                                {
                                    "name": "query",
                                    "description": "Text to look for",
                                    "values": [
                                    ],
                                    "type": "string"
                                },
                                {
                                    "name": "top",
                                    "values": [
                                    ],
                                    "type": "string"
                                }
                            ],
                            "headers": [
                            ],
                            "representations": [
                            ]
                        },
                        "responses": [
                        ]
                    },
                    "resources": [
                        {
                            "type": "policies",
                            "apiVersion": "2019-01-01",
                            "name": "policy",
                            "dependsOn": [
                                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimName'), 'search', 'get')]",
                                "[resourceId('Microsoft.ApiManagement/service/apis/properties', parameters('apimName'), 'search', variables('Search Service Property'))]",
                                "[resourceId('Microsoft.ApiManagement/service/apis/properties', parameters('apimName'), 'search', variables('Query Key Property'))]"
                            ],
                            "properties": {
                                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <!--    Limit number of calls per seconds    -->\r\n    <rate-limit calls=\"2\" renewal-period=\"2\" />\r\n    <!--    Remove subscription key from the backend call    -->\r\n    <set-header id=\"remove-sub-key\" name=\"Ocp-Apim-Subscription-Key\" exists-action=\"delete\" />\r\n    <!--    Remove query string    -->\r\n    <set-query-parameter name=\"query\" exists-action=\"delete\" />\r\n    <!--    Force content type to be JSON    -->\r\n    <set-header id=\"set-content-type\" name=\"Content-Type\" exists-action=\"override\">\r\n      <value>application/json</value>\r\n    </set-header>\r\n    <!--    Force Accept to be JSON    -->\r\n    <set-header id=\"set-accept\" name=\"Accept\" exists-action=\"override\">\r\n      <value>application/json</value>\r\n    </set-header>\r\n    <!--    Set API-Key to Search API    -->\r\n    <set-header id=\"set-api-key\" name=\"api-key\" exists-action=\"override\">\r\n      <value>{{api-search-query-key}}</value>\r\n    </set-header>\r\n    <!--    Set method to POST    -->\r\n    <set-method id=\"go-to-post\">POST</set-method>\r\n    <!--    Set body to the actual query    -->\r\n    <set-variable name=\"body\" value=\"@{&#xA;            var isTop = bool.Parse(context.Request.OriginalUrl.Query.GetValueOrDefault(&quot;top&quot;));&#xA;            var body = new&#xA;            {&#xA;                count=true,&#xA;                facets=new object[0],&#xA;                queryType=&quot;simple&quot;,&#xA;                scoringParameters=new object[0],&#xA;                search=context.Request.OriginalUrl.Query.GetValueOrDefault(&quot;query&quot;),&#xA;                searchMode=&quot;any&quot;,&#xA;                select=&quot;Excerpt,Title,Url,Published,Tags&quot;,&#xA;                top=isTop ? 3 : 27,&#xA;                skip=isTop ? (int?)null : 3&#xA;            };&#xA;            var obj = JObject.FromObject(body);&#xA;            var text = obj.ToString();&#xA;&#xA;            return text;&#xA;        }\" />\r\n    <set-body>@((string)context.Variables[\"body\"])</set-body>\r\n    <!--    Back-end URL    -->\r\n    <set-backend-service base-url=\"https://{{api-search-service-name}}.search.windows.net/indexes('posts')/docs/search.post.search\" />\r\n    <!--    Remove /top from URL    -->\r\n    <rewrite-uri template=\"/\" copy-unmatched-params=\"false\" />\r\n    <!--    Add API version query string    -->\r\n    <set-query-parameter name=\"api-version\" exists-action=\"override\">\r\n      <value>2019-05-06</value>\r\n    </set-query-parameter>\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
                                "format": "xml"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/', variables('Product'))]",
            "dependsOn": [
            ],
            "properties": {
                "displayName": "[variables('Product')]",
                "description": "Give access to search API",
                "terms": "N/A",
                "subscriptionRequired": true,
                "subscriptionsLimit": null,
                "state": "published"
            },
            "resources": [
                {
                    "type": "apis",
                    "apiVersion": "2019-01-01",
                    "name": "[variables('Api')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimName'), variables('Product'))]",
                        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), variables('Api'))]"
                    ],
                    "properties": {
                    }
                }
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/subscriptions",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/', variables('Web Subscription'))]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimName'), variables('Product'))]"
            ],
            "properties": {
                "displayName": "[variables('Web Subscription')]",
                "scope": "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimName'), variables('Product'))]",
                "allowTracing": false
            }
        }
    ],
    "outputs": {
    }
}